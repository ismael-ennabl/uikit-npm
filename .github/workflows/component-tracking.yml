name: Component Tracking and Publishing

on:
  push:
    branches: [ main ]
    paths: 
      - 'lib/components/**'
      - 'lib/package.json'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (patch/minor/major)'
        required: false
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  track-components:
    runs-on: ubuntu-latest
    outputs:
      new-components: ${{ steps.track.outputs.new-components }}
      component-count: ${{ steps.track.outputs.component-count }}
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 2

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        registry-url: 'https://registry.npmjs.org'
        cache: 'npm'
        cache-dependency-path: lib/package-lock.json

    - name: Install dependencies
      working-directory: ./lib
      run: npm ci

    - name: Detect changed components
      id: changes
      run: |
        git diff --name-only HEAD~1 HEAD | grep "^lib/components/" | grep -E "\.(tsx?|ts)$" || echo "No component changes"
        echo "changed_files=$(git diff --name-only HEAD~1 HEAD | grep "^lib/components/" | grep -E "\.(tsx?|ts)$" | xargs)" >> $GITHUB_OUTPUT

    - name: Track components and generate metadata
      id: track
      run: |
        cd lib
        node scripts/track-components.js

    - name: Display component summary
      run: |
        echo "ðŸ“Š Component Summary:"
        echo "Total components: ${{ steps.track.outputs.component-count }}"
        echo "New components: ${{ steps.track.outputs.new-components }}"

    - name: Create component report
      run: |
        echo "## Component Tracking Report" >> $GITHUB_STEP_SUMMARY
        echo "**Total Components:** ${{ steps.track.outputs.component-count }}" >> $GITHUB_STEP_SUMMARY
        echo "**New Components:** ${{ steps.track.outputs.new-components }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Recent Components:" >> $GITHUB_STEP_SUMMARY
        cat lib/component-metadata.json | jq -r '.components[] | select(.lastModified > (now - 86400 | strftime("%Y-%m-%d"))) | "- \(.name) (\(.lastModified))"' >> $GITHUB_STEP_SUMMARY

    - name: Update component metadata
      if: steps.changes.outputs.changed_files != '' || github.event_name == 'workflow_dispatch'
      run: |
        cd lib
        npm run update-metadata

    - name: Auto-increment version
      if: steps.changes.outputs.changed_files != '' || github.event_name == 'workflow_dispatch'
      working-directory: ./lib
      run: |
        if [ "${{ github.event.inputs.version }}" != "" ]; then
          npm version ${{ github.event.inputs.version }} --no-git-tag-version
        else
          npm version patch --no-git-tag-version
        fi
        echo "NEW_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV

    - name: Build library
      if: steps.changes.outputs.changed_files != '' || github.event_name == 'workflow_dispatch'
      working-directory: ./lib
      run: rollup -c --bundleConfigAsCjs

    - name: Publish to NPM
      if: steps.changes.outputs.changed_files != '' || github.event_name == 'workflow_dispatch'
      working-directory: ./lib
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Create Git tag
      if: steps.changes.outputs.changed_files != '' || github.event_name == 'workflow_dispatch'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git tag "v${{ env.NEW_VERSION }}"
        git push origin "v${{ env.NEW_VERSION }}"

    - name: Commit metadata changes
      if: steps.changes.outputs.changed_files != '' || github.event_name == 'workflow_dispatch'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add lib/components/metadata.json lib/package.json
        git commit -m "Update component metadata and version to ${{ env.NEW_VERSION }}" || exit 0
        git push

    - name: Create release notes
      if: steps.changes.outputs.changed_files != '' || github.event_name == 'workflow_dispatch'
      run: |
        VERSION=$(cd lib && node -p "require('./package.json').version")
        echo "## Release v$VERSION" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### New Components:" >> $GITHUB_STEP_SUMMARY
        cat lib/component-metadata.json | jq -r '.components[] | select(.lastModified > (now - 86400 | strftime("%Y-%m-%d"))) | "- \(.name)"' >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "Published to NPM: https://www.npmjs.com/package/ennabl-ui-kit-beta" >> $GITHUB_STEP_SUMMARY