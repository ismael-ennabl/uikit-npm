name: Publish to NPM

on:
  push:
    branches: [ main ]
    paths:
      - 'lib/**'
      - '.github/workflows/publish.yml'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (patch/minor/major)'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  track-components:
    runs-on: ubuntu-latest
    outputs:
      new-components: ${{ steps.track.outputs.new-components }}
      component-count: ${{ steps.track.outputs.component-count }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: lib/package-lock.json
      
      - name: Install dependencies
        run: |
          cd lib
          npm ci
      
      - name: Track components and generate metadata
        id: track
        run: |
          cd lib
          node scripts/track-components.js
      
      - name: Display component summary
        run: |
          echo "ðŸ“Š Component Summary:"
          echo "Total components: ${{ steps.track.outputs.component-count }}"
          echo "New components: ${{ steps.track.outputs.new-components }}"
      
      - name: Create component report
        run: |
          echo "## Component Tracking Report" >> $GITHUB_STEP_SUMMARY
          echo "**Total Components:** ${{ steps.track.outputs.component-count }}" >> $GITHUB_STEP_SUMMARY
          echo "**New Components:** ${{ steps.track.outputs.new-components }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Recent Components:" >> $GITHUB_STEP_SUMMARY
          cat lib/component-metadata.json | jq -r '.components[] | select(.lastModified > (now - 86400 | strftime("%Y-%m-%d"))) | "- \(.name) (\(.lastModified))"' >> $GITHUB_STEP_SUMMARY

  publish:
    needs: track-components
    runs-on: ubuntu-latest
    if: needs.track-components.outputs.new-components != '0' || github.event.inputs.version
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'
          cache-dependency-path: lib/package-lock.json
      
      - name: Install dependencies
        run: |
          cd lib
          npm ci
      
      - name: Build library
        run: |
          cd lib
          npm run build
      
      - name: Publish to NPM
        run: |
          cd lib
          if [ "${{ github.event.inputs.version }}" != "" ]; then
            npm version ${{ github.event.inputs.version }} --no-git-tag-version
          else
            npm version patch --no-git-tag-version
          fi
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      - name: Create release notes
        run: |
          VERSION=$(cd lib && node -p "require('./package.json').version")
          echo "## Release v$VERSION" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### New Components:" >> $GITHUB_STEP_SUMMARY
          cat lib/component-metadata.json | jq -r '.components[] | select(.lastModified > (now - 86400 | strftime("%Y-%m-%d"))) | "- \(.name)"' >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Published to NPM: https://www.npmjs.com/package/ennabl-ui-kit-beta" >> $GITHUB_STEP_SUMMARY 